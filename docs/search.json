[
  {
    "objectID": "EDA_practice.html",
    "href": "EDA_practice.html",
    "title": "EDA_practice",
    "section": "",
    "text": "library(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmat_data &lt;- read_csv2(\"student-mat.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 395 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npor_data &lt;- read_csv2(\"student-por.csv\")\n\nℹ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\nRows: 649 Columns: 33── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr (17): school, sex, address, famsize, Pstatus, Mjob, Fjob, reason, guardi...\ndbl (16): age, Medu, Fedu, traveltime, studytime, failures, famrel, freetime...\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncombine_data &lt;- inner_join(mat_data, \n                           por_data,\n                           by = join_by(school, sex, age, address, famsize, Pstatus, Medu, Fedu, Mjob, Fjob, reason, guardian, traveltime, studytime, failures, schoolsup, famsup, activities, nursery, higher, internet, romantic, famrel, freetime, goout, Dalc, Walc, health),\n                           suffix = c(\"_mat\", \"_por\"))\nmat_data &lt;- mutate(mat_data, across(c(address, reason, internet, higher), as.factor))\npor_data &lt;- mutate(por_data, across(c(address, reason, internet, higher), as.factor))\ncombine_data &lt;- mutate(combine_data, across(c(address, reason, internet, higher), as.factor))"
  },
  {
    "objectID": "EDA_practice.html#categorical-variables",
    "href": "EDA_practice.html#categorical-variables",
    "title": "EDA_practice",
    "section": "Categorical variables",
    "text": "Categorical variables\n\nstr(combine_data)\n\ntibble [320 × 38] (S3: tbl_df/tbl/data.frame)\n $ school      : chr [1:320] \"GP\" \"GP\" \"GP\" \"GP\" ...\n $ sex         : chr [1:320] \"F\" \"F\" \"F\" \"F\" ...\n $ age         : num [1:320] 18 17 15 16 16 16 17 15 15 15 ...\n $ address     : Factor w/ 2 levels \"R\",\"U\": 2 2 2 2 2 2 2 2 2 2 ...\n $ famsize     : chr [1:320] \"GT3\" \"GT3\" \"GT3\" \"GT3\" ...\n $ Pstatus     : chr [1:320] \"A\" \"T\" \"T\" \"T\" ...\n $ Medu        : num [1:320] 4 1 4 3 4 2 4 3 3 4 ...\n $ Fedu        : num [1:320] 4 1 2 3 3 2 4 2 4 4 ...\n $ Mjob        : chr [1:320] \"at_home\" \"at_home\" \"health\" \"other\" ...\n $ Fjob        : chr [1:320] \"teacher\" \"other\" \"services\" \"other\" ...\n $ reason      : Factor w/ 4 levels \"course\",\"home\",..: 1 1 2 2 4 2 2 2 2 4 ...\n $ guardian    : chr [1:320] \"mother\" \"father\" \"mother\" \"father\" ...\n $ traveltime  : num [1:320] 2 1 1 1 1 1 2 1 1 1 ...\n $ studytime   : num [1:320] 2 2 3 2 2 2 2 2 2 2 ...\n $ failures    : num [1:320] 0 0 0 0 0 0 0 0 0 0 ...\n $ schoolsup   : chr [1:320] \"yes\" \"no\" \"no\" \"no\" ...\n $ famsup      : chr [1:320] \"no\" \"yes\" \"yes\" \"yes\" ...\n $ paid_mat    : chr [1:320] \"no\" \"no\" \"yes\" \"yes\" ...\n $ activities  : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ nursery     : chr [1:320] \"yes\" \"no\" \"yes\" \"yes\" ...\n $ higher      : Factor w/ 2 levels \"no\",\"yes\": 2 2 2 2 2 2 2 2 2 2 ...\n $ internet    : Factor w/ 2 levels \"no\",\"yes\": 1 2 2 1 2 2 1 2 2 2 ...\n $ romantic    : chr [1:320] \"no\" \"no\" \"yes\" \"no\" ...\n $ famrel      : num [1:320] 4 5 3 4 5 4 4 4 5 3 ...\n $ freetime    : num [1:320] 3 3 2 3 4 4 1 2 5 3 ...\n $ goout       : num [1:320] 4 3 2 2 2 4 4 2 1 3 ...\n $ Dalc        : num [1:320] 1 1 1 1 1 1 1 1 1 1 ...\n $ Walc        : num [1:320] 1 1 1 2 2 1 1 1 1 2 ...\n $ health      : num [1:320] 3 3 5 5 5 3 1 1 5 2 ...\n $ absences_mat: num [1:320] 6 4 2 4 10 0 6 0 0 0 ...\n $ G1_mat      : num [1:320] 5 5 15 6 15 12 6 16 14 10 ...\n $ G2_mat      : num [1:320] 6 5 14 10 15 12 5 18 15 8 ...\n $ G3_mat      : num [1:320] 6 6 15 10 15 11 6 19 15 9 ...\n $ paid_por    : chr [1:320] \"no\" \"no\" \"no\" \"no\" ...\n $ absences_por: num [1:320] 4 2 0 0 6 0 2 0 0 2 ...\n $ G1_por      : num [1:320] 0 9 14 11 12 13 10 15 12 14 ...\n $ G2_por      : num [1:320] 11 11 14 13 12 12 13 16 12 14 ...\n $ G3_por      : num [1:320] 11 11 14 13 13 13 13 17 13 14 ...\n\nsum_na &lt;- function(col) {\n  sum(is.na(col))\n}\ncombine_data |&gt;\n  summarize(across(everything(), sum_na)) |&gt;\n  View()\n\n#baseR table()\none_way &lt;- table(\"internet at home?\" = combine_data$internet)\none_way\n\ninternet at home?\n no yes \n 48 272 \n\ntwo_way &lt;- table(\"internet at home?\" = combine_data$internet,\n                 \"address\" = combine_data$address)\ntwo_way\n\n                 address\ninternet at home?   R   U\n              no   21  27\n              yes  46 226\n\nthree_way &lt;- table(\"internet at home?\" = combine_data$internet,\n                   \"address\" = combine_data$address,\n                   \"want higher ed?\" = combine_data$higher)\nthree_way\n\n, , want higher ed? = no\n\n                 address\ninternet at home?   R   U\n              no    0   0\n              yes   3   4\n\n, , want higher ed? = yes\n\n                 address\ninternet at home?   R   U\n              no   21  27\n              yes  43 222\n\npre_filtered &lt;- filter(combine_data, reason == \"reputation\")\ntable(\"internet at home?\" = pre_filtered$internet,\n      \"address\" = pre_filtered$address)\n\n                 address\ninternet at home?  R  U\n              no   3  9\n              yes 18 55\n\ncondition_table &lt;- table(\"internet at home?\" = combine_data$internet,\n                         \"address\" = combine_data$address,\n                         \"why this school?\" = combine_data$reason)\ncondition_table[,,\"reputation\"]\n\n                 address\ninternet at home?  R  U\n              no   3  9\n              yes 18 55\n\n#dyplyr\ncombine_data |&gt;\n  group_by(reason, address) |&gt;\n  summarise(count = n()) |&gt;\n  pivot_wider(names_from = address, values_from = count)\n\n`summarise()` has grouped output by 'reason'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 4 × 3\n# Groups:   reason [4]\n  reason         R     U\n  &lt;fct&gt;      &lt;int&gt; &lt;int&gt;\n1 course        28    90\n2 home           9    78\n3 other          9    21\n4 reputation    21    64\n\n#bar graph\ncombine_barplot &lt;- combine_data |&gt;\n  group_by(reason, address) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'reason'. You can override using the\n`.groups` argument.\n\ncombine_barplot\n\n# A tibble: 8 × 3\n# Groups:   reason [4]\n  reason     address count\n  &lt;fct&gt;      &lt;fct&gt;   &lt;int&gt;\n1 course     R          28\n2 course     U          90\n3 home       R           9\n4 home       U          78\n5 other      R           9\n6 other      U          21\n7 reputation R          21\n8 reputation U          64\n\n#stacked\nggplot(combine_barplot, aes(x=reason, y=count, fill=address)) +\n  geom_bar(stat=\"identity\") +\n  xlab(\"Reason for choosing school\") +\n  ylab(\"Student count\") +\n  ggtitle(\"Reason for choosing school by Address Type\") +\n  scale_fill_discrete(name=\"Address\", labels=c(\"Rural\", \"Urban\"))\n\n\n\n\n\n\n\n#side-by-side\nggplot(combine_barplot, aes(x=reason, y=count, fill=address)) +\n  geom_bar(stat=\"identity\", position=\"dodge\") +\n  xlab(\"Reason for choosing school\") +\n  ylab(\"Student count\") +\n  ggtitle(\"Reason for choosing school by Address Type\") +\n  scale_fill_discrete(name=\"Address\", labels=c(\"Rural\", \"Urban\"))"
  },
  {
    "objectID": "EDA_practice.html#numeric-variables-and-across-groups",
    "href": "EDA_practice.html#numeric-variables-and-across-groups",
    "title": "EDA_practice",
    "section": "Numeric variables (and across groups)",
    "text": "Numeric variables (and across groups)\n\ncombine_data |&gt;\n  summarize(across(matches(\"G[0-9]\"), \n            list(\"mean\" = ~ mean(.x, na.rm = TRUE),\n                 \"sd\" = ~ sd(.x, na.rm =TRUE)),\n            .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  G1_mat_mean G1_mat_sd G2_mat_mean G2_mat_sd G3_mat_mean G3_mat_sd G1_por_mean\n        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1        11.3      3.20        11.2      3.67        11.0      4.30        12.4\n# ℹ 5 more variables: G1_por_sd &lt;dbl&gt;, G2_por_mean &lt;dbl&gt;, G2_por_sd &lt;dbl&gt;,\n#   G3_por_mean &lt;dbl&gt;, G3_por_sd &lt;dbl&gt;\n\ncombine_data |&gt;\n  filter(higher == \"yes\") |&gt;\n  summarize(across(matches(\"G[0-9]\"), \n            list(\"mean\" = ~ mean(.x, na.rm = TRUE),\n                 \"sd\" = ~ sd(.x, na.rm =TRUE)),\n            .names = \"{.col}_{.fn}\"))\n\n# A tibble: 1 × 12\n  G1_mat_mean G1_mat_sd G2_mat_mean G2_mat_sd G3_mat_mean G3_mat_sd G1_por_mean\n        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1        11.3      3.19        11.3      3.63        11.1      4.25        12.5\n# ℹ 5 more variables: G1_por_sd &lt;dbl&gt;, G2_por_mean &lt;dbl&gt;, G2_por_sd &lt;dbl&gt;,\n#   G3_por_mean &lt;dbl&gt;, G3_por_sd &lt;dbl&gt;\n\ncombine_data |&gt;\n  group_by(address) |&gt;\n  summarize(across(matches(\"G[0-9]\"), \n            list(\"mean\" = ~ mean(.x, na.rm = TRUE),\n                 \"sd\" = ~ sd(.x, na.rm =TRUE)),\n            .names = \"{.col}_{.fn}\"))\n\n# A tibble: 2 × 13\n  address G1_mat_mean G1_mat_sd G2_mat_mean G2_mat_sd G3_mat_mean G3_mat_sd\n  &lt;fct&gt;         &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;\n1 R              10.7      3.35        10.1      4.02        9.90      4.59\n2 U              11.5      3.15        11.5      3.53       11.3       4.18\n# ℹ 6 more variables: G1_por_mean &lt;dbl&gt;, G1_por_sd &lt;dbl&gt;, G2_por_mean &lt;dbl&gt;,\n#   G2_por_sd &lt;dbl&gt;, G3_por_mean &lt;dbl&gt;, G3_por_sd &lt;dbl&gt;\n\ncombine_data |&gt;\n  group_by(address, reason) |&gt;\n  summarize(across(matches(\"G[0-9]\"), \n            list(\"mean\" = ~ mean(.x, na.rm = TRUE),\n                 \"sd\" = ~ sd(.x, na.rm =TRUE)),\n            .names = \"{.col}_{.fn}\"))\n\n`summarise()` has grouped output by 'address'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 8 × 14\n# Groups:   address [2]\n  address reason     G1_mat_mean G1_mat_sd G2_mat_mean G2_mat_sd G3_mat_mean\n  &lt;fct&gt;   &lt;fct&gt;            &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1 R       course           11.1       2.99       10.0       4.12        9.57\n2 R       home              9.22      2.49        9.44      2.70        9.89\n3 R       other            10.1       2.85        9.56      2.79        9.22\n4 R       reputation       11.0       4.22       10.7       4.85       10.6 \n5 U       course           10.9       3.35       10.8       3.96       10.6 \n6 U       home             11.5       3.19       11.5       3.41       11.2 \n7 U       other            11.5       3.27       12.3       3.34       12.3 \n8 U       reputation       12.1       2.69       12.1       2.92       12.2 \n# ℹ 7 more variables: G3_mat_sd &lt;dbl&gt;, G1_por_mean &lt;dbl&gt;, G1_por_sd &lt;dbl&gt;,\n#   G2_por_mean &lt;dbl&gt;, G2_por_sd &lt;dbl&gt;, G3_por_mean &lt;dbl&gt;, G3_por_sd &lt;dbl&gt;\n\nlibrary(ggcorrplot)\n\nWarning: package 'ggcorrplot' was built under R version 4.3.3\n\ncombine_data |&gt;\n  select(age, ends_with(\"_mat\"), ends_with(\"_por\")) |&gt;\n  select(- paid_mat, - paid_por) |&gt;\n  cor() |&gt;\n  ggcorrplot(hc.order = TRUE, type = \"lower\", lab = TRUE)\n\n\n\n\n\n\n\n#histograms\nggplot(combine_data, aes(x=G3_por, fill = address)) +\n  geom_histogram(alpha=0.3, position=\"identity\") +\n  ggtitle(\"Final Portuguese grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_mat, fill = address)) +\n  geom_histogram(alpha=0.3, position=\"identity\") +\n  ggtitle(\"Final Math grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n#boxplot\nggplot(combine_data, aes(x=G3_por, fill = address)) +\n  geom_boxplot() +\n  ggtitle(\"Final Portuguese grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_mat, fill = address)) +\n  geom_boxplot() +\n  ggtitle(\"Final Math grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n\n\n\n\n\n\n#kernel density plot\nggplot(combine_data, aes(x=G3_por, fill = address)) +\n  geom_density(alpha=0.3) +\n  ggtitle(\"Final Portuguese grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_mat, fill = address)) +\n  geom_density(alpha=0.3) +\n  ggtitle(\"Final Math grades (G3) by Address Type\") +\n  xlab(\"Final Grade\")\n\n\n\n\n\n\n\n#scatter plot\nggplot(combine_data, aes(x=G1_mat, y=G3_mat, color = address)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs first-term grades (G1) by Address Type\") +\n  xlab(\"First term grade Grade\") +\n  ylab(\"Final grade\")\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_por, y=G3_mat, color = address)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs final Portuguese grades by Address Type\") +\n  xlab(\"First Math Grade\") +\n  ylab(\"Final Portuguese grade\")\n\n\n\n\n\n\n\n#faceting on one variable\nggplot(combine_data, aes(x=G1_mat, y=G3_mat)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs first-term grades (G1) by Address Type\") +\n  xlab(\"First term grade Grade\") +\n  ylab(\"Final grade\") +\n  facet_wrap(~ reason)\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_por, y=G3_mat)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs final Portuguese grades by Address Type\") +\n  xlab(\"First Math Grade\") +\n  ylab(\"Final Portuguese grade\") +\n  facet_wrap(~ reason)\n\n\n\n\n\n\n\n#faceting on two variables\nggplot(combine_data, aes(x=G1_mat, y=G3_mat)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs first-term grades (G1) by Address Type\") +\n  xlab(\"First term grade Grade\") +\n  ylab(\"Final grade\") +\n  facet_wrap(address ~ higher)\n\n\n\n\n\n\n\nggplot(combine_data, aes(x=G3_por, y=G3_mat)) +\n  geom_jitter(alpha=0.6) +\n  ggtitle(\"Final Math grades (G3) vs final Portuguese grades by Address Type\") +\n  xlab(\"First Math Grade\") +\n  ylab(\"Final Portuguese grade\") +\n  facet_wrap(address ~ higher)"
  }
]